#-------------------------------------------------------------------------------
# DelphiDox.dox V.1.1
#
# This file should been imported into your Doxygen configuration file:
#
# @INCLUDE_PATH = ...path to this file...
# @INCLUDE = DDAliases.dox
#
# Be aware that doxywizard.exe merges include files explicitely and removes
# @INCLUDE_PATH / @INCLUDE directives afterwards!
#
# Alternatively it can be used directly preserving all other options to their
# default values
#-------------------------------------------------------------------------------

# Section identifiers for conditional documenting
# - DelphiDox --> DelphiDox is available
# - DDVER11   --> DelphiDox V.1.1
ENABLED_SECTIONS       += DelphiDox DDVER11

# treat Delphi (.pas) files as C++:
EXTENSION_MAPPING      += pas=C++
# ...and in case Delphi project (.dpr) file shall documented, too:
EXTENSION_MAPPING      += dpr=C++

# Delphi uses ISO-8859-15 encoding!
INPUT_ENCODING         = ISO-8859-15

# parse at least:
FILE_PATTERNS          += *.pas *.hpp *.h

# to eliminate guard macros generated by Delphi from documentation:
EXCLUDE_SYMBOLS        += *HPP

# Predefined Macros:
# - "DOXYGEN" for conditional compiling (#ifdef/#endif) in C-sources
# - to replace Delphi's reserved word "unit" with "typedef struct {}";
#   and, since Delphi is case insensitive, in various spellings:
PREDEFINED += \
              DOXYGEN \
              unit="typedef struct { }" \
              Unit="typedef struct { }" \
              UNIT="typedef struct { }"

# ------------------------------------------------------------------------------
# and of course: the Delphi ALIASES
# ------------------------------------------------------------------------------
ALIASES += \
           "Snippet{2}=\skip \1 ^^ \until \2 ^^ " \
           "Snippet{3}=\dontinclude \1 ^^ \Snippet{\2,\3}
           "SkipSnippet{2}=\skip \1 ^^ \skipline \2 ^^ " \
           "InclPas{1}=\dontinclude \1.pas ^^ " \
           "SkipArg{1}=\skip {\1 ^^ " \
           "SkipArg{2}=\skip {\1,\2 ^^ " \
           "DHeader=\par Delphi-Declaration ^^ " \
           "DHeader{1}=\anchor \1_pas ^^ \DHeader" \
           "DInclDecl{2}=\InclPas{\1} \SkipArg{\2}" \
           "DInclDecl{3}=\InclPas{\1} \SkipArg{\2,\3}" \
           "DDeclHdr{2}=\DHeader{\2} \DInclDecl{\1,\2}" \
           "DDeclHdr{3}=\DHeader{\2_\3} \DInclDecl{\1,\2,\3}" \
           "DVarDecl{1}=\Snippet{\1:,;}" \
           "DTypeDecl{1}=\Snippet{\1 =,;}" \
           "DEnumTypeDecl{1}=\Snippet{\1 = (,);}" \
           "DEnumVarDecl{1}=\Snippet{\1: (,);}" \
           "DFuncDecl{1}=\Snippet{\1(,):}" \
           "DProcDecl{1}=\Snippet{\1(,);}" \
           "DCompTypeDecl{1}=\Snippet{\1 =,; // \1}" \
           "DCompVarDecl{1}=\Snippet{\1:,; // \1}" \
           "DConstDecl{1}=\DVarDecl{\1}" \
           "DDefDecl{1}=\DTypeDecl{\1}" \
           "Dfn{2}=\fn \1 ^^ \memberof \2" \
           "Dstruct{1}=\struct \1 \"\" \"\" " \
           "Dunion{1}=\union \1 \"\" \"\" " \
           "Dclass{1}=\class \1 \"\" \"\" " \
           "Dmember{2}=\var \1::\2" \
           "Dmethod{2}=\fn \1::\2" \
           "Dproperty{2}=\property \1::\2" \
           "DVar{2}=\var \1                     ^^ \DDeclHdr{\2,\1} \DVarDecl{\1}" \
           "DDef{2}=\def \1                     ^^ \DDeclHdr{\2,\1} \DDefDecl{\1}" \
           "DConst{2}=\var \1                   ^^ \DDeclHdr{\2,\1} \DVarDecl{\1}" \
           "DType{2}=\typedef \1                ^^ \DDeclHdr{\2,\1} \DTypeDecl{\1}" \
           "DEnumType{2}=\enum \1               ^^ \DDeclHdr{\2,\1} \DEnumTypeDecl{\1}" \
           "DEnumVar{2}=\var \1                 ^^ \DDeclHdr{\2,\1} \DEnumVarDecl{\1}" \
           "DEnum{2}=\DEnumType{\1,\2}" \
           "DFunc{2}=\Dfn{\1,\2}                ^^ \DDeclHdr{\2,\1} \DFuncDecl{\1}" \
           "DProc{2}=\Dfn{\1,\2}                ^^ \DDeclHdr{\2,\1} \DProcDecl{\1}" \
           "DRecordType{2}=\Dstruct{\1}         ^^ \DDeclHdr{\2,\1} \DCompTypeDecl{\1}" \
           "DRecordVar{2}=\var \1               ^^ \DDeclHdr{\2,\1} \DCompVarDecl{\1}" \
           "DRecordField{3}=\Dmember{\1,\2}     ^^ \DDeclHdr{\3,\1,\2} \DVarDecl{\2}" \
           "DRecord{2}=\DRecordType{\1,\2}" \
           "DClassType{2}=\Dclass{\1}           ^^ \DDeclHdr{\2,\1} \DCompTypeDecl{\1}" \
           "DClassField{3}=\Dmember{\1,\2}      ^^ \DDeclHdr{\3,\1,\2} \DVarDecl{\2}" \
           "DClassProp{3}=\Dproperty{\1,\2}     ^^ \DDeclHdr{\3,\1,\2} \DCompVarDecl{\2}" \
           "DClassFunc{3}=\Dmethod{\1,\2}       ^^ \DDeclHdr{\3,\1,\2} \DFuncDecl{\2}" \
           "DClassProc{3}=\Dmethod{\1,\2}       ^^ \DDeclHdr{\3,\1,\2} \DProcDecl{\2}" \
           "DClassCtor{3}=DClassProc{\1,\2,\3}" \
           "DClassDtor{3}=DClassProc{\1,\2,\3}" \
           "DClassFuncDef{3}=\Dmethod{\1,\2}    ^^ \DDeclHdr{\3,\1} \DFuncDecl{\1.\2}" \
           "DClassProcDef{3}=\Dmethod{\1,\2}    ^^ \DDeclHdr{\3,\1} \DProcDecl{\1.\2}" \
           "DClassCtorDef{3}=DClassProc{\1,\2,\3}" \
           "DClassDtorDef{3}=DClassProc{\1,\2,\3}" \
           "DClass{2}=\DClassType{\1,\2}" \
           "DUnionType{2}=\Dunion{\1}           ^^ \DDeclHdr{\2,\1} \DCompTypeDecl{\1}" \
           "DUnionVar{2}=\Dunion{\1}            ^^ \DDeclHdr{\2,\1} \DCompVarDecl{\1}" \
           "DUnionField{3}=\Dmember{\1,\2}      ^^ \DDeclHdr{\3,\1} \DVarDecl{\2}" \
           "DUnion{2}=\DUnionType{\1,\2}" \
           "DModuleSourceCode{2}=\Snippet{\1,\2;,end.}

# ------------------------------------------------------------------------------
# to document compound members sequentially - there seems to be a bug(?):
# after the first documented entity the included file seems no more to be present!
# ------------------------------------------------------------------------------
#ALIASES += \
#        "SkipToTypeDecl{2}=\InclPas{\2} \SkipSnippet{\{\1,\1 =} ^^ " \
#        "SkipToVarDecl{2}=\InclPas{\2} \SkipSnippet{\{\1,\1:} ^^ " \
#        "DRecordField{2}=\Dmember{\1,\2}     ^^ \DHeader \DVarDecl{\2}" \
#        "DClassField{2}=\Dmember{\1,\2}      ^^ \DHeader \DVarDecl{\2}" \
#        "DClassProp{2}=\Dmember{\1,\2}       ^^ \DHeader \DCompVar{\2}" \
#        "DClassFunc{2}=\Dmember{\1,\2}       ^^ \DHeader \DFuncDecl{\2}" \
#        "DClassProc{2}=\Dmember{\1,\2}       ^^ \DHeader \DProcDecl{\2}" \
#        "DClassCtor{2}=DClassProc{\1,\2}" \
#        "DClassDtor{2}=DClassProc{\1,\2}"

# ------------------------------------------------------------------------------
# to include C/C++ declarations from Delphi generated .hpp files
# ------------------------------------------------------------------------------
ALIASES += \
           "InclHpp{1}=\dontinclude \1.hpp ^^ " \
           "CHeader=\par C++Builder Declaration ^^ " \
           "CHeader{1}=\anchor \1_hpp ^^ \CHeader " \
           "CDeclHdr{2}=\CHeader{\2} \InclHpp{\1}" \
           "CClassDecl{1}=\Snippet{\1 :,~\1(\1} \until };" \
           "CClassMethodDecl{2}=\SkipSnippet{\1 :,\2(}" \
           "CClassVarDecl{2}=\SkipSnippet{\1 :,\2;}" \
           "CClassPropertyDecl{2}=\SkipSnippet{\1,\2 = \\{}" \
           "CStructDecl{1}=\Snippet{struct DECLSPEC_DRECORD \1,\};}" \
           "CEnumDecl{1}=\Snippet{enum DECLSPEC_DENUM \1 :,\};}" \
           "CFuncDecl{1}=\skipline \1(" \
           "CVarDecl{2}=\skipline DELPHI_PACKAGE \1 \2;" \
           "CVarDecl{1}=\skipline \2;" \
           "CTypeDecl{1}=\skipline \1;" \
           "CDefDecl{1}=\skipline #define \1" \
           "CClass{2}=\CDeclHdr{\2,\1} \CClassDecl{\1}" \
           "CClassMethod{3}=\CDeclHdr{\3,\1_\2} \CClassMethodDecl{\1,\2}" \
           "CClassVar{3}=\CDeclHdr{\3,\1_\2} \CClassVarDecl{\1,\2}" \
           "CClassProperty{3}=\CDeclHdr{\3,\1_\2} \CClassPropertyDecl{\1,\2}" \
           "CStruct{2}=\CDeclHdr{\2,\1} \CStructDecl{\1}" \
           "CEnum{2}=\CDeclHdr{\2,\1} \CEnumDecl{\1}" \
           "CFunc{2}=\CDeclHdr{\2,\1} \CFuncDecl{\1}" \
           "CProc{2}=\CFunc{\1,\2}" \
           "CVar{3}=\CDeclHdr{\3,\1_\2} \CVarDecl{\1,\2}" \
           "CVar{2}=\CDeclHdr{\2,\1} \CVarDecl{\1}" \
           "CType{2}=\CDeclHdr{\2,\1} \CTypeDecl{\1}" \
           "CDef{2}=\CDeclHdr{\2,\1} \CDefDecl{\1}"


#-------------------------------------------------------------------------------
