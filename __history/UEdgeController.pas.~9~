unit UEdgeController;

interface

uses UEdge, UDatabase, UNodes, VCL.TMSFNCBloxControl, System.SysUtils,
Vcl.Dialogs, ULanguage;

type
  TEdgeController = class abstract
    class procedure createNewEdge(control : TTMSFNCBloxControl; edge : TEdge;
                                            database : TEdgeDatabase);
    class procedure checkFirstNode(control : TTMSFNCBloxControl;
                                edge : TEdge; database : TEdgeDatabase);
    class procedure checkSecondNode(control : TTMSFNCBloxControl;
                                edge : TEdge; database : TEdgeDatabase);
    class var newEdgeClick : boolean;
    class var newEdgeWithoutTarget : boolean;
    class var IDohneDB : Integer;
  private
    class function getNewID(database : TEdgeDatabase) : Integer; overload;
    class function getNewID : Integer; overload;
    class var selectedComponent : String;
    class var selectedID : Integer;
  end;

implementation

class procedure TEdgeController.createNewEdge(control : TTMSFNCBloxControl;
                                edge : TEdge; database : TEdgeDatabase);
begin
  selectedComponent := control.Presenter.Selecteds[0].GetNamePath;
  selectedID := (control.Presenter.Selecteds[0].Id).ToInteger();

  { Wenn eine Kante an ersten Knoten gesetzt wird }
  if newEdgeClick and not selectedComponent.Equals(TEdge.getClassType) then
  begin
    checkFirstNode(control, edge, database);
  end
  { Wenn Kante an zweiten Knoten gesetzt wird }
  else if newEdgeWithoutTarget  and not
    selectedComponent.Equals(TEdge.getClassType) then
  begin
    checkSecondNode(control, edge, database);
  end;
end;

class procedure TEdgeController.checkFirstNode(control : TTMSFNCBloxControl;
                                edge : TEdge; database : TEdgeDatabase);
begin
  if selectedComponent.Equals(TEnd.getClassType) then
    ShowMessage(ENDNODE_FAIL_DE)
  else
  begin
    newEdgeClick := false;
    newEdgeWithoutTarget := true;
    edge := TEdge.Create(getNewID(database),selectedID);
    edge.SourceLinkPoint.AnchorLink :=
                                  control.Presenter.Selecteds[0].LinkPoints[1];
    control.Blox.Add(edge);
    database.addNewEdge(edge);
  end;
end;

class procedure TEdgeController.checkSecondNode(control : TTMSFNCBloxControl;
                                edge : TEdge; database : TEdgeDatabase);
begin
  if selectedComponent.Equals(TStart.getClassType) then
    ShowMessage(STARTNODE_FAIL_DE)
  else
  begin
    newEdgeWithoutTarget := false;
    edge.TargetLinkPoint.AnchorLink :=
                                  control.Presenter.Selecteds[0].LinkPoints[0];
    edge.RequiresConnections := true;
    edge.setNextNodeID(selectedID);
    database.addNextNode(edge);
  end;
end;

class function TEdgeController.getNewID(database : TEdgeDatabase) : Integer;
begin
  Result := database.getHighestEdgeID +1;
end;

class function TEdgeController.getNewID : Integer;
begin
  Result := IDohneDB +1;
end;

end.
